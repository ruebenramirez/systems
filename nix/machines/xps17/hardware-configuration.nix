# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usbhid" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # Import tank zpool from USB-C DAS
  boot.zfs.extraPools = [ "tank" ];
  boot.zfs.forceImportAll = true;  # Critical for external pools
  boot.zfs.devNodes = "/dev/disk/by-id";
  boot.postBootCommands = ''
    echo "=== STARTING ZPOOL IMPORT ==="
    ${pkgs.zfs}/bin/zpool import -a -N -d /dev/disk/by-id || true
    ${pkgs.zfs}/bin/zpool status
    ${pkgs.zfs}/bin/zfs mount -a
    echo "=== ZPOOL IMPORT COMPLETE ==="
  '';

  fileSystems."/" =
    { device = "zroot/local/root";
      fsType = "zfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/3DEB-AF12";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/nix" =
    { device = "zroot/local/nix";
      fsType = "zfs";
    };

  fileSystems."/home" =
    { device = "zroot/safe/home";
      fsType = "zfs";
    };

  fileSystems."/persist" =
    { device = "zroot/safe/persist";
      fsType = "zfs";
    };

#  fileSystems."/mnt/D" =
#    { device = "/dev/nvme1n1p1";
#      fsType = "ntfs";
#      options = [ "rw" "uid=1000" ];
#    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/2d3ce25f-7512-432f-a7ad-87be7b411c71"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s13f0u3u4u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
